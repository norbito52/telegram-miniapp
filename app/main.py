"""
–ì–æ–ª–æ–≤–Ω–∏–π —Ñ–∞–π–ª FastAPI –¥–ª—è GiftRoom Marketplace
"""
import os
import logging
from pathlib import Path
from fastapi import FastAPI, Request, HTTPException
from fastapi.responses import HTMLResponse, JSONResponse
from fastapi.staticfiles import StaticFiles
from fastapi.middleware.cors import CORSMiddleware
from fastapi.middleware.trustedhost import TrustedHostMiddleware

# –ù–∞–ª–∞—à—Ç–æ–≤—É—î–º–æ –ª–æ–≥—É–≤–∞–Ω–Ω—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

# –°—Ç–≤–æ—Ä—é—î–º–æ FastAPI –¥–æ–¥–∞—Ç–æ–∫
app = FastAPI(
    title="GiftRoom Marketplace",
    description="–ë–µ–∑–ø–µ—á–Ω–∏–π –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å –¥–ª—è –ø—Ä–æ–¥–∞–∂—É Telegram –∫–∞–Ω–∞–ª—ñ–≤ –∑ –ø–æ–¥–∞—Ä—É–Ω–∫–∞–º–∏",
    version="1.0.0",
    docs_url="/docs",
    redoc_url="/redoc"
)

# –î–æ–¥–∞—î–º–æ CORS middleware
app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],  # –£ –ø—Ä–æ–¥–∞–∫—à–Ω –∑–º—ñ–Ω—ñ—Ç—å –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ñ –¥–æ–º–µ–Ω–∏
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

# –°—Ç–∞—Ç–∏—á–Ω—ñ —Ñ–∞–π–ª–∏
frontend_path = Path(__file__).parent.parent / "frontend"
if frontend_path.exists():
    app.mount("/static", StaticFiles(directory=str(frontend_path / "static")), name="static")

@app.get("/", response_class=HTMLResponse)
async def root():
    """–ì–æ–ª–æ–≤–Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞ - Telegram Mini App"""
    try:
        # –®—É–∫–∞—î–º–æ HTML —Ñ–∞–π–ª
        html_path = Path(__file__).parent.parent / "frontend" / "index.html"
        
        if html_path.exists():
            with open(html_path, "r", encoding="utf-8") as f:
                content = f.read()
            return HTMLResponse(content=content)
        else:
            # Fallback HTML
            return HTMLResponse(content=get_fallback_html())
    except Exception as e:
        logger.error(f"Error serving index.html: {e}")
        return HTMLResponse(content=get_fallback_html())

@app.get("/health")
async def health_check():
    """–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤'—è —Å–∏—Å—Ç–µ–º–∏"""
    return {
        "status": "healthy",
        "version": "1.0.0",
        "message": "GiftRoom Marketplace is running"
    }

@app.get("/info")
async def app_info():
    """–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –¥–æ–¥–∞—Ç–æ–∫"""
    return {
        "app_name": "GiftRoom Marketplace",
        "version": "1.0.0",
        "environment": os.getenv("ENVIRONMENT", "development"),
        "features": {
            "telegram_bot": True,
            "ton_integration": True,
            "referral_system": True
        }
    }

def get_fallback_html() -> str:
    """–†–µ–∑–µ—Ä–≤–Ω–∏–π HTML"""
    return """
    <!DOCTYPE html>
    <html>
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>GiftRoom Market</title>
        <style>
            body {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
                margin: 0;
                padding: 20px;
                background: #0F0F19;
                color: white;
                text-align: center;
                min-height: 100vh;
                display: flex;
                align-items: center;
                justify-content: center;
            }
            .container {
                max-width: 400px;
                padding: 30px;
                background: #2a2a3e;
                border-radius: 20px;
            }
            h1 {
                color: #3d5afe;
                margin-bottom: 20px;
            }
            .status {
                background: #4CAF50;
                color: white;
                padding: 10px 20px;
                border-radius: 25px;
                display: inline-block;
                margin: 20px 0;
            }
            .rocket {
                font-size: 48px;
                margin-bottom: 20px;
                animation: bounce 2s ease-in-out infinite;
            }
            @keyframes bounce {
                0%, 100% { transform: translateY(0); }
                50% { transform: translateY(-10px); }
            }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="rocket">üöÄ</div>
            <h1>GiftRoom Market</h1>
            <div class="status">–°–µ—Ä–≤–µ—Ä –ø—Ä–∞—Ü—é—î</div>
            <p>–ú–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å Telegram –∫–∞–Ω–∞–ª—ñ–≤ –∑ –ø–æ–¥–∞—Ä—É–Ω–∫–∞–º–∏</p>
            <p>–í–µ—Ä—Å—ñ—è: 1.0.0</p>
        </div>
    </body>
    </html>
    """

# –û–±—Ä–æ–±–∫–∞ –ø–æ–º–∏–ª–æ–∫
@app.exception_handler(404)
async def not_found_handler(request: Request, exc: HTTPException):
    """–û–±—Ä–æ–±–∫–∞ 404 –ø–æ–º–∏–ª–æ–∫"""
    return JSONResponse(
        status_code=404,
        content={"message": "–°—Ç–æ—Ä—ñ–Ω–∫–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞", "path": str(request.url.path)}
    )

@app.exception_handler(500)
async def internal_error_handler(request: Request, exc: HTTPException):
    """–û–±—Ä–æ–±–∫–∞ –≤–Ω—É—Ç—Ä—ñ—à–Ω—ñ—Ö –ø–æ–º–∏–ª–æ–∫"""
    logger.error(f"Internal server error: {exc}")
    return JSONResponse(
        status_code=500,
        content={"message": "–í–Ω—É—Ç—Ä—ñ—à–Ω—è –ø–æ–º–∏–ª–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞"}
    )

if __name__ == "__main__":
    import uvicorn
    
    port = int(os.getenv("PORT", 8000))
    uvicorn.run(app, host="0.0.0.0", port=port)
